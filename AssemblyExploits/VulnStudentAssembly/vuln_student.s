#SEC204 - Vulnerable Student
.section .data
score:
	.string "Your score is %d \n"
question:
	.string "What is your name? \n"
namefmt:
	.string "%s"
answer:
	.string "Hello %s \n" 

.section .bss
name:
	.long 16 

.section .text
.globl _start
_start:
	pushl %eax
	call srand		#seeds random number generation
	mov $question, %eax	#moves question to eax
	pushl %eax
	call printf		#prints out
	addl $8, %esp		#clean stack
	call getName		#gets the name from the user
	
	pushl %eax
	pushl $score		#score needs to be on the stack for printf
	
	call rand		#get first random number
	nop
	nop
	mov $0, %edx		#div requires edx to be empty for the remainder
	mov $100, %ebx 		#divide by upper bound to get the value between 0 and 100
	div %ebx
	nop
	nop
	push %edx		#push remainder to stack for printing
	nop
	nop
	pushl $score
	nop
	nop
	call printf		#prints the string with accompaning edx value from eariler division 
	addl $8, %esp		#cleans the stack, sort of (large string may requires more than 4 bytes)

	pushl $0		#push successfull exit code to the stack
	call exit

getName:
	pushl %ebp		#save old frame pointer
	movl %esp, %ebp		#create new one
	pushl $name		#push address for name to be stored
	pushl $namefmt		#give scanf address of format string
	call scanf
	addl $8, %esp		#clean stack

	pushl $name		#pass input to printf by value
	pushl $answer		#pass address of output format
	call printf
	addl $8, %esp		#clean stack
	
	movl $0, %eax		#program finished successfully
	movl %ebp, %esp		#release used memory
	popl %ebp		#restore old pointer
	ret
